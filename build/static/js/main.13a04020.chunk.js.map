{"version":3,"sources":["components/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["Display","state","interest","calculateMonthlyPayment","props","loan","price","firstPayment","period","years","monthlyPayment","Math","pow","className","toFixed","round","this","Component","App","number","useState","data","errors","loanValue","setLoan","firstPaymentValue","setFirstPayment","yearsValue","setYears","for","type","name","id","required","value","onChange","e","target","isNaN","length","parseInt","dataVal","toString","substr","func","setTimeout","min","max","step","Calculator","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.13a04020.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Display extends Component {\r\n  state = {\r\n    interest: 0.015,\r\n  };\r\n\r\n  calculateMonthlyPayment = () => {\r\n    const { loan, firstPayment, years } = this.props;\r\n    const price = loan - (loan * firstPayment) / 100;\r\n    const period = years * 12;\r\n    const interest = this.state.interest;\r\n    const monthlyPayment =\r\n      (price * interest) / (1 - Math.pow(1 / (1 + interest), period));\r\n\r\n    if (loan) {\r\n      return (\r\n        <div className=\"output__wrapper\">\r\n          <h2 className=\"output__header\">Расчет:</h2>\r\n          <p className=\"output__data\">\r\n            Заём:\r\n            <span className=\"output__data__span\">{price.toFixed(2)} €</span>\r\n          </p>\r\n          <p className=\"output__data\">\r\n            Процентная ставка:\r\n            <span className=\"output__data__span\">{interest * 100} %</span>\r\n          </p>\r\n          <p className=\"output__data\">\r\n            Количество месяцев:\r\n            <span className=\"output__data__span\">{period}</span>\r\n          </p>\r\n          <p className=\"output__data\">\r\n            Месячный платеж:\r\n            <span className=\"output__data__span\">\r\n              {Math.round(monthlyPayment)} €\r\n            </span>\r\n          </p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"error\">Для расчета нужно указать стоимость покупки</div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <div className=\"output\">{this.calculateMonthlyPayment()}</div>;\r\n  }\r\n}\r\n\r\nexport default Display;\r\n","import React, { useState } from \"react\";\r\nimport Calculator from \"./components/Calculator\";\r\nimport \"./components/form.scss\";\r\n\r\nfunction App() {\r\n  const [loanValue, setLoan] = useState({\r\n    data: 399,\r\n    errors: [],\r\n  });\r\n  const [firstPaymentValue, setFirstPayment] = useState({\r\n    data: 25,\r\n    errors: [],\r\n  });\r\n  const [yearsValue, setYears] = useState(3);\r\n  const declension = [\"год\", \"года\", \"лет\"];\r\n\r\n  function handleChangeLoan(e) {\r\n    const data = e.target.value;\r\n    if (!isNaN(data) && data > 0) {\r\n      setLoan({\r\n        data: data,\r\n      });\r\n      setFirstPayment({\r\n        data: firstPaymentValue.data || 0,\r\n        errors: [],\r\n      });\r\n    } else if (!data) {\r\n      setLoan({\r\n        data: \"\",\r\n        errors: [\"Укажите сумму желаемого кредита\"],\r\n      });\r\n      setFirstPayment({\r\n        data: \"\",\r\n      });\r\n      setYears(1);\r\n    } else {\r\n      setLoan({\r\n        data: \"\",\r\n        errors: [\"Используйте только цифры\"],\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleFirstPayment(e) {\r\n    const data = parseInt(e.target.value, 10);\r\n    if (data >= 0 && data < 100 && loanValue.data) {\r\n      setFirstPayment({\r\n        data: data,\r\n      });\r\n    } else if (data >= 100) {\r\n      const dataVal = data.toString().substr(0, 2);\r\n      setFirstPayment({\r\n        data: parseInt(dataVal, 10),\r\n        errors: [\"Первый взнос не может быть больше стоимости покупки\"],\r\n        func: setTimeout(() => {\r\n          setFirstPayment({\r\n            data: parseInt(dataVal, 10),\r\n            errors: [],\r\n          });\r\n        }, 3000),\r\n      });\r\n    } else {\r\n      setFirstPayment({\r\n        data: \"\",\r\n        errors: [\"Используйте только цифры\"],\r\n        func: setTimeout(() => {\r\n          setFirstPayment({\r\n            data: 0,\r\n            errors: [],\r\n          });\r\n        }, 1000),\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleChangeYears(e) {\r\n    setYears(e.target.value);\r\n  }\r\n\r\n  function plural(number, titles) {\r\n    const cases = [2, 0, 1, 1, 1, 2];\r\n    return titles[\r\n      number % 100 > 4 && number % 100 < 20\r\n        ? 2\r\n        : cases[number % 10 < 5 ? number % 10 : 5]\r\n    ];\r\n  }\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <h1 className=\"form__header\">Калькулятор кредита</h1>\r\n      <div className=\"row\">\r\n        <div className=\"col-25\">\r\n          <label className=\"form__label\" for=\"loanid\">\r\n            Цена покупки:\r\n          </label>\r\n        </div>\r\n        <div className=\"col-75\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"loan\"\r\n            id=\"loanid\"\r\n            required=\"required\"\r\n            value={loanValue.data}\r\n            onChange={handleChangeLoan}\r\n            className={\r\n              typeof loanValue.errors !== \"undefined\" &&\r\n              loanValue.errors.length > 0\r\n                ? \"bounce form__input--error form__input\"\r\n                : \"form__input\"\r\n            }\r\n          />\r\n          <small className=\"form__info\">Сумма {loanValue.data || 0} €</small>\r\n          <p className=\"error\">{loanValue.errors}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-25\">\r\n          <label className=\"form__label\" for=\"paymentid\">\r\n            Первый взнос (в %):\r\n          </label>\r\n        </div>\r\n        <div className=\"col-75\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstpayment\"\r\n            id=\"paymentid\"\r\n            value={firstPaymentValue.data}\r\n            onChange={handleFirstPayment}\r\n            className={\r\n              typeof firstPaymentValue.errors !== \"undefined\" &&\r\n              firstPaymentValue.errors.length > 0\r\n                ? \"bounce form__input--error form__input\"\r\n                : \"form__input\"\r\n            }\r\n          />\r\n          <small className=\"form__info\">\r\n            Первый взнос: {firstPaymentValue.data || 0}%\r\n          </small>\r\n          <p className=\"error\">{firstPaymentValue.errors}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-25\">\r\n          <label className=\"form__label\" for=\"yearid\">\r\n            Период:\r\n          </label>\r\n        </div>\r\n        <div className=\"col-75\">\r\n          <input\r\n            type=\"range\"\r\n            name=\"year\"\r\n            id=\"yearid\"\r\n            min=\"1\"\r\n            max=\"6\"\r\n            step=\"1\"\r\n            value={yearsValue}\r\n            onChange={handleChangeYears}\r\n            className=\"form__input\"\r\n          />\r\n          <small className=\"form__info\">\r\n            На {yearsValue} {plural(yearsValue, declension)}\r\n          </small>\r\n        </div>\r\n      </div>\r\n\r\n      <Calculator\r\n        loan={loanValue.data}\r\n        firstPayment={firstPaymentValue.data}\r\n        years={yearsValue}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}